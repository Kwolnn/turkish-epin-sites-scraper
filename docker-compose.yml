version: "3.8"

services:
  backend:
    build: .
    container_name: backend_app
    env_file:
      - .env
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      n8n:
        condition: service_healthy
      flaresolverr:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${PORT}/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - appnet

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: gameprices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      N8N_HOST: your-ngrok-url.ngrok-free.app
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      WEBHOOK_URL: https://your-ngrok-url.ngrok-free.app
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: your_email@example.com
      N8N_BASIC_AUTH_PASSWORD: your_password
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
    ports:
      - "5678:5678"
    volumes:
      - ./n8n:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:5678 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - appnet

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    ports:
      - "8191:8191"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - BROWSER_TIMEOUT=180000
      - HEADLESS=true
      - TEST_URL=https://www.google.com
    shm_size: 2gb
    volumes:
      - /dev/shm:/dev/shm
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8191/"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  postgres_data:
